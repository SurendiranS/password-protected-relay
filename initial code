#include <Keypad.h>
#include<LiquidCrystal.h>
#include<EEPROM.h>

LiquidCrystal liquid_crystal_display(12, 11, 5, 4, 3, 2);
char password[4];
char initial_password[4], new_password[4];
int i = 0;
int relay_pin = 10;
char key_pressed = 0;
const byte rows = 4;
const byte columns = 4;
char hexaKeys[rows][columns] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte row_pins[rows] = {A0, A1, A2, A3};
byte column_pins[columns] = {A4, A5, 9, 8};
Keypad keypad_key = Keypad( makeKeymap(hexaKeys), row_pins, column_pins, rows, columns);

void setup()
{
  Serial.begin(9600);
  analogWrite(6, 20);
  liquid_crystal_display.begin(16, 2);
  liquid_crystal_display.setCursor(0, 1);
  liquid_crystal_display.print("  Initializing");
  Serial.println("  Initializing");
  delay(1500);
  pinMode(relay_pin, OUTPUT);
  digitalWrite(relay_pin, HIGH);
  liquid_crystal_display.clear();
  liquid_crystal_display.setCursor(0, 0);
  liquid_crystal_display.print("MINI PROJECT");
  Serial.println("MINI PROJECT");
  liquid_crystal_display.setCursor(0, 2);
  liquid_crystal_display.print("Done By");
  Serial.println("Done By");
  delay(2000);
  liquid_crystal_display.clear();
  liquid_crystal_display.setCursor(0, 0);
  // set the display to automatically scroll:
  // print from 0 to 9:
  liquid_crystal_display.print ("-SRIDHARAN S  SURENDRIAN S  VARSHINI V R");
  Serial.println("-SRIDHARAN S  SURENDRIAN S  VARSHINI V R");
  delay(500);  // turn off automatic scrolling
  for (int positionCounter = 0; positionCounter < 25; positionCounter++) {
    // scroll one position right:
    liquid_crystal_display.scrollDisplayLeft();
    // wait a bit:
    delay(1000);
  }
  liquid_crystal_display.clear();
  liquid_crystal_display.print("Enter Password");
  Serial.println("Enter Password");
  liquid_crystal_display.setCursor(0, 1);
  initialpassword();
}


void loop()
{
  key_pressed = keypad_key.getKey();
  if (key_pressed == '#')
    change();
  if (key_pressed)
  {
    password[i++] = key_pressed;
    liquid_crystal_display.print(key_pressed);
    Serial.println("key_pressed");
  }
  if (i == 4)
  {
    delay(200);
    for (int j = 0; j < 4; j++)
      initial_password[j] = EEPROM.read(j);
    if (!(strncmp(password, initial_password, 4)))
    {
      liquid_crystal_display.clear();
      liquid_crystal_display.print("Pass Accepted");
      Serial.println("Pass Accepted");
      digitalWrite(relay_pin, LOW);
      delay(2000);
      liquid_crystal_display.setCursor(0, 1);
      liquid_crystal_display.print("Pres # to change");
      Serial.println("Pres # to change");
      delay(2000);
      liquid_crystal_display.clear();
      liquid_crystal_display.print("Enter Password:");
      Serial.println("Enter Password:");
      liquid_crystal_display.setCursor(0, 1);
      i = 0;
    }
    else
    {
      digitalWrite(relay_pin, HIGH);
      liquid_crystal_display.clear();
      liquid_crystal_display.print("Wrong Password");
      Serial.println("Wrong Password");
      liquid_crystal_display.setCursor(0, 1);
      liquid_crystal_display.print("Pres # to Change");
      Serial.println("Pres # to Change");
      delay(2000);
      liquid_crystal_display.clear();
      liquid_crystal_display.print("Enter Password");
      Serial.println("Enter Password");
      liquid_crystal_display.setCursor(0, 1);
      i = 0;
    }
  }
  if (key_pressed == '*') {
    digitalWrite(relay_pin, HIGH);
    liquid_crystal_display.clear();
    liquid_crystal_display.print("Enter Password");
    Serial.println("Enter Password");
    liquid_crystal_display.setCursor(0, 1);
    i = 0;
  }
}

void change()
{
  int j = 0;
  liquid_crystal_display.clear();
  liquid_crystal_display.print("Current Password");
  Serial.println("Current Password");
  liquid_crystal_display.setCursor(0, 1);
  while (j < 4)
  {
    char key = keypad_key.getKey();
    if (key)
    {
      new_password[j++] = key;
      liquid_crystal_display.print(key);
      Serial.println(key);
    }
    key = 0;
  }
  delay(500);
  if ((strncmp(new_password, initial_password, 4)))
  {
    liquid_crystal_display.clear();
    liquid_crystal_display.print("Wrong Password");
    Serial.println("Wrong Password");
    liquid_crystal_display.setCursor(0, 1);
    liquid_crystal_display.print("Try Again");
    Serial.println("Try Again");
    delay(1000);
  }
  else
  {
    j = 0;
    liquid_crystal_display.clear();
    liquid_crystal_display.print("New Password:");
    Serial.println("New Password:");
    liquid_crystal_display.setCursor(0, 1);
    while (j < 4)
    {
      char key = keypad_key.getKey();
      if (key)
      {
        initial_password[j] = key;
        liquid_crystal_display.print(key);
        Serial.println("key");
        EEPROM.write(j, key);
        j++;
      }
    }
    liquid_crystal_display.print("Pass Changed");
    Serial.println("Pass Changed");
    delay(1000);
  }
  liquid_crystal_display.clear();
  liquid_crystal_display.print("Enter Password");
  Serial.println("Enter Password");
  liquid_crystal_display.setCursor(0, 1);
  key_pressed = 0;
}

void initialpassword() {
  for (int j = 0; j < 4; j++)
    EEPROM.write(j, j + 49);
  for (int j = 0; j < 4; j++)
    initial_password[j] = EEPROM.read(j);
}



